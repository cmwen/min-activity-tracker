name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  prerelease:
    name: Create Pre-Release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build unsigned release APK
      run: ./gradlew assembleRelease

    - name: Rename APK
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle.kts | awk '{print $3}' | tr -d '"')
        mv app/build/outputs/apk/release/app-release-unsigned.apk \
           app/build/outputs/apk/release/min-activity-tracker-${VERSION_NAME}-unsigned.apk || \
        mv app/build/outputs/apk/release/app-release.apk \
           app/build/outputs/apk/release/min-activity-tracker-${VERSION_NAME}-unsigned.apk
        echo "VERSION_NAME=${VERSION_NAME}" >> $GITHUB_ENV

    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$LAST_TAG" ]; then
          CHANGELOG=$(git log --pretty=format:"- %s" --no-merges | head -20)
        else
          CHANGELOG=$(git log --pretty=format:"- %s" --no-merges ${LAST_TAG}..HEAD)
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Check if pre-release
      id: check_prerelease
      run: |
        TAG="${{ github.ref_name }}"
        if [[ "$TAG" =~ (alpha|beta|rc) ]]; then
          echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
        else
          echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          ## üì¶ Min Activity Tracker ${{ github.ref_name }}
          
          ### Changes in this Release
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ### üì• Installation
          1. Download the unsigned APK below
          2. Enable "Install from unknown sources" on your Android device
          3. Install the APK
          4. Grant required permissions during onboarding
          
          ### ‚ö†Ô∏è Note
          This is an **unsigned APK** for testing purposes. For production use, please sign the APK with your own keystore.
          
          ### üìã Requirements
          - Android 10+ (API level 29)
          - ~10MB storage space
          - Usage Access permission (required)
          - Location permission (optional)
          
          ### üîí Security
          This APK is built from source code at commit ${{ github.sha }}.
          You can verify the build by checking the GitHub Actions logs.
          
        draft: false
        prerelease: ${{ steps.check_prerelease.outputs.IS_PRERELEASE }}
        files: app/build/outputs/apk/release/min-activity-tracker-*-unsigned.apk
        fail_on_unmatched_files: true

  release-signed:
    name: Create Signed Release (Optional)
    runs-on: ubuntu-latest
    needs: prerelease
    if: contains(github.ref_name, 'alpha') == false && contains(github.ref_name, 'beta') == false
    # Only run for stable releases and when signing secrets are available
    continue-on-error: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build release APK
      run: ./gradlew assembleRelease

    - name: Check if signing secrets available
      id: check_secrets
      run: |
        if [ -n "${{ secrets.SIGNING_KEY }}" ]; then
          echo "SECRETS_AVAILABLE=true" >> $GITHUB_OUTPUT
        else
          echo "SECRETS_AVAILABLE=false" >> $GITHUB_OUTPUT
          echo "‚ö†Ô∏è Signing secrets not configured. Skipping signed APK generation."
        fi

    - name: Sign APK
      id: sign_apk
      if: steps.check_secrets.outputs.SECRETS_AVAILABLE == 'true'
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.SIGNING_KEY }}
        alias: ${{ secrets.ALIAS }}
        keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
        keyPassword: ${{ secrets.KEY_PASSWORD }}

    - name: Upload signed APK to release
      if: steps.check_secrets.outputs.SECRETS_AVAILABLE == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        files: ${{ steps.sign_apk.outputs.signedReleaseFile }}