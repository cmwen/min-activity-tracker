name: Release Signed APK

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Build and Publish Signed APK
    runs-on: ubuntu-latest
    env:
      SIGNING_KEY_BASE64: ${{ secrets.ANDROID_SIGNING_KEY }}
      KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
      KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate signing secrets
        shell: bash
        run: |
          missing=0
          for var in SIGNING_KEY_BASE64 KEY_ALIAS KEY_STORE_PASSWORD KEY_PASSWORD; do
            if [ -z "${!var}" ]; then
              echo "::error::Secret $var is not configured."
              missing=1
            fi
          done
          if [ "$missing" -eq 1 ]; then
            exit 1
          fi

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Detect build tools version
        id: build_tools
        shell: bash
        run: |
          SDK_ROOT="${ANDROID_SDK_ROOT:-$ANDROID_HOME}"
          if [ -z "$SDK_ROOT" ]; then
            echo "::error::ANDROID_SDK_ROOT/ANDROID_HOME not set."
            exit 1
          fi
          if [ ! -d "$SDK_ROOT/build-tools" ]; then
            echo "::error::No build-tools directory found under $SDK_ROOT"
            ls -al "$SDK_ROOT"
            exit 1
          fi
          VERSION=$(ls -1 "$SDK_ROOT/build-tools" | sort -V | tail -n1)
          if [ -z "$VERSION" ]; then
            echo "::error::Failed to detect build tools version."
            exit 1
          fi
          echo "Detected build tools version: $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Sign release APK
        id: sign_app
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ env.SIGNING_KEY_BASE64 }}
          alias: ${{ env.KEY_ALIAS }}
          keyStorePassword: ${{ env.KEY_STORE_PASSWORD }}
          keyPassword: ${{ env.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: ${{ steps.build_tools.outputs.version }}

      - name: Prepare artifacts
        id: prepare
        shell: bash
        run: |
          TAG_NAME="${{ github.ref_name }}"
          VERSION="${TAG_NAME#v}"
          SIGNED_APK="${{ steps.sign_app.outputs.signedReleaseFile }}"
          TARGET="app/build/outputs/apk/release/min-activity-tracker-${VERSION}.apk"
          mv "$SIGNED_APK" "$TARGET"
          echo "SIGNED_APK=$TARGET" >> "$GITHUB_OUTPUT"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Generate changelog
        id: changelog
        shell: bash
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges | head -20)
          else
            CHANGELOG=$(git log --pretty=format:"- %s" --no-merges ${LAST_TAG}..HEAD)
          fi
          echo "CHANGELOG<<EOF" >> "$GITHUB_OUTPUT"
          echo "$CHANGELOG" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Min Activity Tracker ${{ github.ref_name }}
          body: |
            ## ðŸ“¦ Min Activity Tracker ${{ github.ref_name }}

            ### Changes in this Release
            ${{ steps.changelog.outputs.CHANGELOG }}

            ### ðŸ“¥ Installation
            1. Download the signed APK below
            2. Enable "Install from unknown sources" on your Android device
            3. Install the APK
            4. Grant required permissions during onboarding

            ### ðŸ”’ Security
            This APK is built from source code at commit ${{ github.sha }}.
            You can verify the build by checking the GitHub Actions logs.
          files: ${{ steps.prepare.outputs.SIGNED_APK }}
          fail_on_unmatched_files: true
